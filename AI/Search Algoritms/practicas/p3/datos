Hacer una función de generado aleatorio de tableros de Nreinas


Función para generar 10.000 estados iniciales distintos

public static Set<NQueensBoard> generateSetNqueensBoard(int boardSize, int populationSize){
	Set<NQueensBoard> setGeneratedNQueens = new HashSet<NQueensBoard>();

	while(setGeneratedNQueens.size()< populationSize){
		setGeneratedNQueens.add(generateRandomNqueensBoard(_boardSize)); 
	}
	
	return setGeneratedNQueens;
}


Colocar aleatoriamente una reina en una columna
board.addQueenAt(new XYLocation(i, new Random().nextInt(boardSize)));


DONE***********************************************************


Antes de hacer el apartado 3, hace varias trazas cambiando los parametros del SCHEDULER (K, DELTA Y T) los parametros de bajada de temperatura, temperatura etcc


En el apartado 4 hay que pasarle un tablero completo

DONE***********************************************************

Para la segunda parte:


El número de pasos dados hasta el fallo o el acierto (coste)
 
agent.getActions().size()

Para saber si ha habido éxito o no 
search.getOutcome().toString().contentEquals("SOLUTION_FOUND"))




board.addQueenAt(new XYLocation(i, new Random().nextInt(boardSize)));

Para mostrar el último estado es
System.out.println("Final State=\n" + search.getLastSearchState())

apartado 1

Fallos: 85.28999999999999
Coste medio fallos: 194.2528
Exitos: 14.71
Coste medio Exitos: 42.0168

apartado 2

Search Outcome=SOLUTION_FOUND
Final state= 
-------Q
--Q-----
Q-------
-----Q--
-Q------
----Q---
------Q-
---Q----

Intentos: 2.0
Fallos: 1.0
Coste medio fallos: 336.0
Exitos: 1.0
Coste medio Exitos: 224.0

apartado 3


5000, 0.01, 1400 -> 51% aciertos
50000, 0.01, 1800 ->	66% aciertos
500, 0.1, 800 -> 68% aciertos
500, 0.1, 1000 -> 76% aciertos
700, 0.1, 1400 -> 82% aciertos 
500, 0.1, 1400 -> 85.9% aciertos 
700, 0.01, 1000 -> 64% aciertos
50, 0.1, 1000 -> 73.2% aciertos
5000, 0.1, 2400 -> 92% aciertos
500, 0.1, 1800 -> 89.7% aciertos


apartado 4
Search Outcome=SOLUTION_FOUND
Final state= 
---Q----
-----Q--
-------Q
-Q------
------Q-
Q-------
--Q-----
----Q---

Intentos: 1.0
Fallos: 0.0
Coste medio fallos: 0.0
Exitos: 1.0
Coste medio Exitos: 100800.0

apartado 5

NQueensDemo GeneticAlgorithm  -->
Parámetros iniciales: 64, 0.08
Max Time (1 second) Best Individual=
---Q----
------Q-
--Q-----
-------Q
-Q------
----Q---
Q-------
-----Q--

Board Size      = 8
# Board Layouts = 16777216
Fitness         = 28.0
Is Goal         = true
Population Size = 64
Itertions       = 98
Took            = 462ms.

